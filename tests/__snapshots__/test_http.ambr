# serializer version: 1
# name: test_http_tool_list
  dict({
    'prompt': 'Only if the user wants to control a device, tell them to expose entities to their voice assistant in Home Assistant.',
    'tools': list([
      dict({
        'description': "Turns on/opens/presses a device or entity. For locks, this performs a 'lock' action. Use for requests like 'turn on', 'activate', 'enable', or 'lock'.",
        'name': 'HassTurnOn',
        'parameters': dict({
          'properties': dict({
            'area': dict({
              'type': 'string',
            }),
            'device_class': dict({
              'items': dict({
                'enum': list([
                  'awning',
                  'blind',
                  'curtain',
                  'damper',
                  'door',
                  'garage',
                  'gas',
                  'gate',
                  'identify',
                  'outlet',
                  'receiver',
                  'restart',
                  'shade',
                  'shutter',
                  'speaker',
                  'switch',
                  'tv',
                  'update',
                  'water',
                  'window',
                ]),
                'type': 'string',
              }),
              'type': 'array',
            }),
            'domain': dict({
              'items': dict({
                'type': 'string',
              }),
              'type': 'array',
            }),
            'floor': dict({
              'type': 'string',
            }),
            'name': dict({
              'type': 'string',
            }),
          }),
          'required': list([
          ]),
          'type': 'object',
        }),
      }),
      dict({
        'description': "Turns off/closes a device or entity. For locks, this performs an 'unlock' action. Use for requests like 'turn off', 'deactivate', 'disable', or 'unlock'.",
        'name': 'HassTurnOff',
        'parameters': dict({
          'properties': dict({
            'area': dict({
              'type': 'string',
            }),
            'device_class': dict({
              'items': dict({
                'enum': list([
                  'awning',
                  'blind',
                  'curtain',
                  'damper',
                  'door',
                  'garage',
                  'gas',
                  'gate',
                  'identify',
                  'outlet',
                  'receiver',
                  'restart',
                  'shade',
                  'shutter',
                  'speaker',
                  'switch',
                  'tv',
                  'update',
                  'water',
                  'window',
                ]),
                'type': 'string',
              }),
              'type': 'array',
            }),
            'domain': dict({
              'items': dict({
                'type': 'string',
              }),
              'type': 'array',
            }),
            'floor': dict({
              'type': 'string',
            }),
            'name': dict({
              'type': 'string',
            }),
          }),
          'required': list([
          ]),
          'type': 'object',
        }),
      }),
      dict({
        'description': 'Cancels all timers',
        'name': 'HassCancelAllTimers',
        'parameters': dict({
          'properties': dict({
            'area': dict({
              'type': 'string',
            }),
          }),
          'required': list([
          ]),
          'type': 'object',
        }),
      }),
      dict({
        'description': 'Orders beer',
        'name': 'OrderBeer',
        'parameters': dict({
          'properties': dict({
            'type': dict({
              'type': 'string',
            }),
          }),
          'required': list([
            'type',
          ]),
          'type': 'object',
        }),
      }),
    ]),
  })
# ---
